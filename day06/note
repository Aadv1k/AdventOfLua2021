So, suppose you have a lanternfish with an internal timer value of 3:

- After one day, its internal timer would become 2.
- After another day, its internal timer would become 1.
- After another day, its internal timer would become 0.

- After another day, its internal timer would reset to 6, and it would create a
  new lanternfish with an internal timer of 8.

- After another day, the first lanternfish would have an internal timer of 5, and
  the second lanternfish would have an internal timer of 7.


A lanternfish that creates a new fish resets its timer to 6, not 7 (because 0
is included as a valid timer value). The new lanternfish starts with an
internal timer of 8 and does not start counting down until the next day.


{
	1: 1
	2: 1
	3: 2
	4: 1
}

{
	0: 1

	1: 1
	2: 2
	3: 1
	6: 1
	8: 1
}

{
	1: 2
	2: 1
	5: 1
	6: 1
	7: 1
	8: 1
}

{
	1: 1
	5: 1
	7: 1
	4: 1
	3: 1
	8: 2
	6: 2
}

{
	4: 1
	6: 1
	3: 1
	2: 1
	7: 2
	5: 2
	8: 1
	6: 1
}

{
	3: 1
	5: 1
	2: 1
	1: 1
	6: 2
	4: 2
	7: 1
	5: 1
}

==============================================================
==============================================================
==============================================================
==============================================================
==============================================================


{
	1: 1
	2: 1
	3: 2
	4: 1
}

{
	0: 1

	1: 1
	2: 2
	3: 1
	6: 1
	9: 1
}


loop 5
go through the dict
another = {}
if key == 0 then
	another[9] = another[k] -- so if there are two zeroes, then two fish with a value
	of 8 will be added 

	another[6] = another[k] -- two of six
else
	if another[k-1] == 0 then
	another[9] = another[k]
	another[6] = another[k]
	else
		another[k-1] = another[k]
	end

another = dict
